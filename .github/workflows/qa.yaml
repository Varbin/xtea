name: QA

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15, windows-2019]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, pypy2, pypy3]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt
    - name: Get codeclimate reporter
      shell: pwsh
      run: |
        if ($PSVersionTable.OS.Contains("Linux") -and $env:GITHUB_REF -eq "refs/heads/master") {
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
        } else {
          Write-Host "Skipped on this platform."
        }
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    - name: Test
      run: |
        python -m coverage run --source=xtea setup.py test
        python -m coverage xml
        python -m coverage report
    - name: Push coverage to codeclimate
      shell: pwsh
      run: |
        if ($PSVersionTable.OS.Contains("Linux") -and $env:GITHUB_REF -eq "refs/heads/master") {
          ./cc-test-reporter after-build
          exit $LASTEXITCODE
        } else {
          Write-Host "Skipped on this platform."
        }
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
